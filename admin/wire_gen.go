// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/ac-zht/gotools/option"
	"github.com/ac-zht/super-job/admin/internal/repository"
	"github.com/ac-zht/super-job/admin/internal/repository/dao"
	"github.com/ac-zht/super-job/admin/internal/service"
	"github.com/ac-zht/super-job/admin/internal/web"
	"github.com/ac-zht/super-job/admin/ioc"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitWebSettingService() service.WebSettingService {
	webSettingRepository := repository.NewWebSettingRepository()
	webSettingService := service.NewWebSettingService(webSettingRepository)
	return webSettingService
}

func InitInstallService() service.InstallService {
	v := NewBaseModelOption()
	baseModel := dao.NewBaseModel(v...)
	settingDAO := dao.NewSettingDAO(baseModel)
	settingRepository := repository.NewSettingRepository(settingDAO)
	installDAO := dao.NewInstallDAO(baseModel)
	installRepository := repository.NewInstallRepository(installDAO)
	webSettingRepository := repository.NewWebSettingRepository()
	userDAO := dao.NewUserDAO(baseModel)
	userRepository := repository.NewUserRepository(userDAO)
	installService := service.NewInstallService(settingRepository, installRepository, webSettingRepository, userRepository)
	return installService
}

func InitWeb() *gin.Engine {
	v := NewBaseModelOption()
	baseModel := dao.NewBaseModel(v...)
	taskDAO := dao.NewTaskDAO(baseModel)
	taskRepository := repository.NewTaskRepository(taskDAO)
	taskService := service.NewTaskService(taskRepository)
	taskHandler := web.NewTaskHandler(taskService)
	executorDAO := dao.NewExecutorDAO(baseModel)
	executorRepository := repository.NewExecutorRepository(executorDAO)
	executorService := service.NewExecutorService(executorRepository)
	executorHandler := web.NewExecutorHandler(executorService)
	settingDAO := dao.NewSettingDAO(baseModel)
	settingRepository := repository.NewSettingRepository(settingDAO)
	settingService := service.NewSettingService(settingRepository)
	settingHandler := web.NewSettingHandler(settingService)
	installDAO := dao.NewInstallDAO(baseModel)
	installRepository := repository.NewInstallRepository(installDAO)
	webSettingRepository := repository.NewWebSettingRepository()
	userDAO := dao.NewUserDAO(baseModel)
	userRepository := repository.NewUserRepository(userDAO)
	installService := service.NewInstallService(settingRepository, installRepository, webSettingRepository, userRepository)
	installHandler := web.NewInstallHandler(installService)
	engine := ioc.InitWebServer(taskHandler, executorHandler, settingHandler, installHandler)
	return engine
}

// wire.go:

var commonProvider = wire.NewSet(
	NewBaseModelOption, dao.NewBaseModel, dao.NewSettingDAO, dao.NewUserDAO, dao.NewInstallDAO, repository.NewSettingRepository, repository.NewUserRepository, repository.NewInstallRepository, repository.NewWebSettingRepository, service.NewInstallService,
)

func NewBaseModelOption() []option.Option[dao.BaseDbModel] {
	return []option.Option[dao.BaseDbModel]{func(m *dao.BaseDbModel) {}}
}
